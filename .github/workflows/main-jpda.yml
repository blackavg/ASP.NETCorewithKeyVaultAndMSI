# This is a basic workflow to help you get started with Actions

name: (MSI) Build and deploy WebApp & SQL

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
    
env:
  AZURE_WEBAPP_NAME: jpda-msi-kv-deploy    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '5.0.100'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: 'Login via Azure CLI'
        uses: jpda/login@v1.2
        with:
          enable-managed-identity: true
          enable-AzPsSession: true

      # Deploy the ARM template a single command using the runners shell
      - name: Deploy Azure Resource Manager (ARM) Template
        uses: Azure/arm-deploy@v1.0.1
        with:
          # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'managementgroup', 'subscription'
          scope: resourcegroup
          # Provide the Id of the subscription which should be used, only required for resource Group or Subscription deployments.
          subscriptionId: e7048bdb-835c-440f-9304-aa4171382839
          # Provide the name of a resource group, only required for resource Group deployments.
          resourceGroupName: test-me-dev-cmatskas-msi-app
          # Specify the path or URL to the Azure Resource Manager template.
          template: ./deployment/azuredeploy.json
          # Supply deployment parameter values.
          parameters: ./deployment/azuredeploy.parameters.kv.json
          
      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }} 
      
      # Run dotnet build and publish
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration Release
          dotnet publish -c Release -o '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp' 
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} # Replace with your app name
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/myapp'
          
      - name: Azure logout
        run: az logout
